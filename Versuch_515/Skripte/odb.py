#Begin variables
#order:a
#End variables

import sys
import os
import numpy as np
import matplotlib
import matplotlib.pyplot as plt
from numpy import genfromtxt
import scipy.odr as sodr
from scipy.optimize import curve_fit
import chart_studio.plotly as py


plt.figure(figsize=(11,5))
data = genfromtxt("odb.txt", delimiter=';')
xdata = data[1:,1]
ydata = data[1:,0]
xerror = data[1:,2]



# Fitting
z, error = np.polyfit(xdata, ydata, 10, cov=True)
f = np.poly1d(z)
print(f)
print(z)
print(np.sqrt(np.diag(error)))

x_new = np.linspace(13, 515, 1000)
y_new = f(x_new)

plt.errorbar(xdata,ydata,xerr=xerror,fmt='.', markersize=1, zorder=0)
plt.plot(x_new, y_new, '-', color='red', zorder=10, label="$f(x)=a\cdot x^{10}+b\cdot x^{9}+c\cdot x^{8}+d\cdot x^{7}+e\cdot x^{6}+f\cdot x^{5}+g\cdot x^{4}+h\cdot x^{3}+i\cdot x^{2}+j\cdot x+k$\n$a=%.10f\cdot 10^{-25}$\n$b=%.10f\cdot 10^{-20}$\n$c=%.10f\cdot 10^{-17}$\n$d=%.10f\cdot 10^{-14}$\n$e=%.10f\cdot 10^{-12}$\n$f=%.10f\cdot 10^{-9}$\n$g=%.10f\cdot 10^{-7}$\n$h=%.10f\cdot 10^{-5}$\n$i=%.10f\cdot 10^{-3}$\n$j=%.10f\cdot 10^{-2}$\n$j=%.10f\cdot 10^{-4}$"%(f[10]*10**25,f[9]*10**20,f[8]*10**17,f[7]*10**14,f[6]*10**12,f[5]*10**9,f[4]*10**7,f[3]*10**5,f[2]*10**3,f[1]*10**2,f[0]*10**4))

plt.xlabel("Driftzeit / ns")
plt.ylabel("Spurabstand x / mm")
plt.legend(loc="lower right")
#plt.show()

plt.savefig("../../pics/ODB.pdf")
#plt.figure()
time = np.linspace(13,600,1000)
#position = 3.2638031470343758*10**-24*time**10-1.140584914028921*10**-20*time**9+1.7130526492148507*10**-17*time**8-1.4424668447869293*10**-14*time**7+7.445575231551542*10**-12*time**6-2.4179091169525324*10**-9*time**5+4.873*10**-7*time**4-5.764777310702253*10**-5*time**3+0.0034629936913600596*time**2-0.034869184587523375*time+0.0006603244336531989
a = 32638031470343759829694290442353037241440038031123785366839495410846265245696*10**-100
b =-114058491402892097537596474994177905079380757622867504442878432996064147219152896*10**-100
c = 171305264921485072325929016507500977867138611020009150255888773694725403010867920896*10**-100
d = -144246684478692938721793209493020109356679608533400001503235367625778842082490376519680*10**-100
e = 74455752315515420999172432870459588621821416807882861610215735778022167806550480607248384*10**-100
f = -24179091169525325434354231672031400171391214018497556958701246537818316779959498340619517952*10**-100
g = 4872805579455849990930123414070327047506051828817069369532635040160780137792588543347639975936*10**-100
h = -576477731070225266654200738994653595351590123909158380559755832890257175334557321937880243765248*10**-100
i = 34629936913600594426221454616387870525704808103040267869833210509867901451293730559073509024202752*10**-100
j = -348691845875233734584866264106001622391805813530874885817638205601406615604824631296393722269270016*10**-100
k = 6603244336531988491081701310832063833463485432420027289895703139423730484127194573418206075027456*10**-100

#alt_pos = f[10]*time**10+f[9]*time**9+f[8]*time**8+f[7]*time**7+f[6]*time**6+f[5]*time**5+f[4]*time**4+f[3]*time**3+f[2]*time**2+f[1]*time**1+f[0]
a =3.263803146996604e-24
b =-1.1405849140216569e-20
c =1.713052649211002e-17
d =-1.4424668447880543e-14
e =7.445575231571847e-12
f =-2.4179091169613853e-09
g =4.872805579474163e-07
h =-5.7647773107223793e-05
i =0.0034629936913756054
j =-0.034869184588697595
k =0.00066032444743083
alt_pos = a*time**10+b*time**9+c*time**8+d*time**7+e*time**6+f*time**5+g*time**4+h*time**3+i*time**2+j*time**1+k

print("\n")
for i in range(0,11):
    print(z[i])
#plt.plot(time,position)
plt.plot(time, alt_pos)
plt.show()
